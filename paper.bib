%==================================================================================================%
% Research Papers
%==================================================================================================%

%==================================================================================================%
% Security
%==================================================================================================%

%--------------------------------------------------------------------------------------------------%
% In-process Isolation
%--------------------------------------------------------------------------------------------------%
@inproceedings{ILDI:DAC17,
    author = {Cho, Yeongpil and Kwon, Donghyun and Paek, Yunheung},
    title = {{Instruction-Level Data Isolation for the Kernel on ARM}},
    booktitle = {Proceedings of the 54th Annual Design Automation Conference 2017},
    series = {DAC '17},
    year = {2017},
    isbn = {978-1-4503-4927-7},
    location = {Austin, TX, USA},
    pages = {26:1--26:6},
    articleno = {26},
    numpages = {6},
    url = {http://doi.acm.org/10.1145/3061639.3062267},
    doi = {10.1145/3061639.3062267},
    acmid = {3062267},
    publisher = {ACM},
    address = {New York, NY, USA},
}

@inproceedings {IMIX:USS18,
    author = {Tommaso Frassetto and Patrick Jauernig and Christopher Liebchen and Ahmad-Reza Sadeghi},
    title = {{IMIX: In-Process Memory Isolation EXtension}},
    booktitle = {27th {USENIX} Security Symposium ({USENIX} Security 18)},
    year = {2018},
    isbn = {978-1-939133-04-5},
    address = {Baltimore, MD},
    pages = {83--97},
    url = {https://www.usenix.org/conference/usenixsecurity18/presentation/frassetto},
    publisher = {{USENIX} Association},
    month = aug,
}

@inproceedings {Hodor:ATC19,
    author = {Mohammad Hedayati and Spyridoula Gravani and Ethan Johnson and John Criswell and Michael L. Scott and Kai Shen and Mike Marty},
    title = {{Hodor: Intra-Process Isolation for High-Throughput Data Plane
        Libraries}},
    booktitle = {2019 {USENIX} Annual Technical Conference ({USENIX} {ATC} 19)},
    year = {2019},
    isbn = {978-1-939133-03-8},
    address = {Renton, WA},
    pages = {489--504},
    url = {https://www.usenix.org/conference/atc19/presentation/hedayati-hodor},
    publisher = {{USENIX} Association},
    month = jul,
}

@inproceedings {ERIM:USS19,
    author = {Anjo Vahldiek-Oberwagner and Eslam Elnikety and Nuno O. Duarte and Michael Sammler and Peter Druschel and Deepak Garg},
    title = {{{ERIM}: Secure, Efficient In-process Isolation with Protection
        Keys ({MPK})}},
    booktitle = {28th {USENIX} Security Symposium ({USENIX} Security 19)},
    year = {2019},
    isbn = {978-1-939133-06-9},
    address = {Santa Clara, CA},
    pages = {1221--1238},
    url = {https://www.usenix.org/conference/usenixsecurity19/presentation/vahldiek-oberwagner},
    publisher = {{USENIX} Association},
    month = aug,
}

%--------------------------------------------------------------------------------------------------%
% Embedded Systems
%--------------------------------------------------------------------------------------------------%
@article{BEEBS:arXiv13,
    author = {James Pallister and Simon Hollis and Jeremy Bennett},
    title = {BEEBS: Open Benchmarks for Energy Measurements on Embedded Platforms},
    journal = {arXiv preprint arXiv:1308.5174v2},
    archiveprefix = {arXiv},
    eprint = {1308.5174v2},
    year = {2013},
    month = {August}
}

@INPROCEEDINGS{RECFISH:ecrts19,
    author={R. J. {Walls} and N. F. {Brown} and T. {Le Baron} and C. A. {Shue} and H. {Okhravi} and B. {Ward}},
    booktitle={31st Conference on Real-Time Systems (ECRTS'19)},
    title={Control-Flow Integrity for Real-Time Embedded Systems},
    year={2019},
    volume={},
    number={},
    pages={},
    doi={},
    ISSN={},
    month={July},
}

@INPROCEEDINGS{EPOXY:Oakland17,
    author={A. A. {Clements} and N. S. {Almakhdhub} and K. S. {Saab} and P. {Srivastava} and J. {Koo} and S. {Bagchi} and M. {Payer}},
    booktitle={2017 IEEE Symposium on Security and Privacy (SP)},
    title={{Protecting Bare-Metal Embedded Systems with Privilege Overlays}},
    year={2017},
    volume={},
    number={}
    pages={289-303},
    doi={10.1109/SP.2017.37},
    ISSN={2375-1207},
    month={May},
}


%==================================================================================================%
% Memory Safety
%==================================================================================================%
@inproceedings{SafePtr:PLDI94,
    author = {Austin, Todd M. and Breach, Scott E. and Sohi, Gurindar S.},
    title = {{Efficient Detection of All Pointer and Array Access Errors}},
    booktitle = {Proceedings of the ACM SIGPLAN 1994 Conference on Programming Language Design and Implementation},
    series = {PLDI '94},
    year = {1994},
    isbn = {0-89791-662-X},
    location = {Orlando, Florida, USA},
    pages = {290--301},
    numpages = {12},
    url = {http://doi.acm.org/10.1145/178243.178446},
    doi = {10.1145/178243.178446},
    acmid = {178446},
    publisher = {ACM},
}

@article{Patil:1997:LCC:250900.250910,
    author = {Patil, Harish and Fischer, Charles},
    title = {Low-cost, Concurrent Checking of Pointer and Array Accesses in C Programs},
    journal = {Softw. Pract. Exper.},
    issue_date = {Jan. 1997},
    volume = {27},
    number = {1},
    month = Jan,
    year = {1997},
    issn = {0038-0644},
    pages = {87--110},
    numpages = {24},
    url = {http://dx.doi.org/10.1002/(SICI)1097-024X(199701)27:1<87::AID-SPE78>3.0.CO;2-P},
    doi = {10.1002/(SICI)1097-024X(199701)27:1<87::AID-SPE78>3.0.CO;2-P},
    acmid = {250910},
    publisher = {John Wiley \& Sons, Inc.},
    address = {New York, NY, USA},
    keywords = {memory access checking, multiprocessor workstations, program slicing},
}

@inproceedings{Cyclone:ATC02,
    author = {Jim, Trevor and Morrisett, J. Greg and Grossman, Dan and Hicks, Michael W. and Cheney, James and Wang, Yanling},
    title = {{Cyclone: A Safe Dialect of C}},
    booktitle = {Proceedings of the General Track of the Annual Conference on USENIX Annual Technical Conference},
    series = {ATEC '02},
    year = {2002},
    isbn = {1-880446-00-6},
    pages = {275--288},
    numpages = {14},
    url = {http://dl.acm.org/citation.cfm?id=647057.713871},
    acmid = {713871},
    publisher = {USENIX Association},
    address = {Berkeley, CA, USA},
}


@inproceedings{SekarMemSafe:FSE04,
 author = {Xu, Wei and DuVarney, Daniel C. and Sekar, R.},
 title = {{An Efficient and Backwards-compatible Transformation to Ensure Memory
     Safety of C Programs}},
 booktitle = {Proceedings of the 12th ACM SIGSOFT Twelfth International Symposium on Foundations of Software Engineering},
 series = {SIGSOFT '04/FSE-12},
 year = {2004},
 isbn = {1-58113-855-5},
 location = {Newport Beach, CA, USA},
 pages = {117--126},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1029894.1029913},
 doi = {10.1145/1029894.1029913},
 acmid = {1029913},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {C, memory safety, program transformation},
}

@inproceedings{SVA:SOSP07,
    author = {Criswell, John and Lenharth, Andrew and Dhurjati, Dinakar and Adve, Vikram},
    title = {{Secure Virtual Architecture: A Safe Execution Environment for
        Commodity Operating Systems}},
    booktitle = {Proceedings of Twenty-first ACM SIGOPS Symposium on Operating Systems Principles},
    series = {SOSP '07},
    year = {2007},
    isbn = {978-1-59593-591-5},
    location = {Stevenson, Washington, USA},
    pages = {351--366},
    numpages = {16},
    url = {http://doi.acm.org/10.1145/1294261.1294295},
    doi = {10.1145/1294261.1294295},
    acmid = {1294295},
    publisher = {ACM},
    address = {New York, NY, USA},
    keywords = {compiler, memory safety, operating systems, security, type safety, typed assembly language, virtual machine},
}

@inproceedings{SVAOS:USS09,
    author = {Criswell, John and Geoffray, Nicolas and Adve, Vikram},
    title = {{Memory Safety for Low-level Software/Hardware Interactions}},
    booktitle = {Proceedings of the 18th Conference on USENIX Security Symposium},
    series = {SSYM'09},
    year = {2009},
    location = {Montreal, Canada},
    pages = {83--100},
    numpages = {18},
    url = {http://dl.acm.org/citation.cfm?id=1855768.1855774},
    acmid = {1855774},
    publisher = {USENIX Association},
    address = {Berkeley, CA, USA},
}

@inproceedings{EternalWar:Oakland13,
    author = {Szekeres, Laszlo and Payer, Mathias and Wei, Tao and Song, Dawn},
    title = {{SoK: Eternal War in Memory}},
    booktitle = {Proceedings of the 2013 IEEE Symposium on Security and Privacy},
    series = {SP '13},
    year = {2013},
    isbn = {978-0-7695-4977-4},
    pages = {48--62},
    numpages = {15},
    url = {http://dx.doi.org/10.1109/SP.2013.13},
    doi = {10.1109/SP.2013.13},
    acmid = {2498101},
    publisher = {IEEE Computer Society},
    address = {Washington, DC, USA},
}

@inproceedings{VirtualGohst:ASPLOS14,
    author = {Criswell, John and Dautenhahn, Nathan and Adve, Vikram},
    title = {{Virtual Ghost: Protecting Applications from Hostile Operating
        Systems}},
    booktitle = {Proceedings of the 19th International Conference on Architectural Support for Programming Languages and Operating Systems},
    series = {ASPLOS '14},
    year = {2014},
    isbn = {978-1-4503-2305-5},
    location = {Salt Lake City, Utah, USA},
    pages = {81--96},
    numpages = {16},
    url = {http://doi.acm.org/10.1145/2541940.2541986},
    doi = {10.1145/2541940.2541986},
    acmid = {2541986},
    publisher = {ACM},
    address = {New York, NY, USA},
    keywords = {control-flow integrity, inlined reference monitors, malicious operating systems, software fault isolation, software security},
}

@INPROCEEDINGS{CheckedC:SecDev18,
    author={A. S. {Elliott} and A. {Ruef} and M. {Hicks} and D. {Tarditi}},
    booktitle={2018 IEEE Cybersecurity Development (SecDev)},
    title={{Checked C: Making C Safe by Extension}},
    year={2018},
    volume={},
    number={},
    pages={53-60},
    keywords={C++ language;program debugging;storage management;C safe;spatial
    safety;backward-compatibility;incremental conversion;developer control;highly performant
    code;performance evaluation;checked region;bounds-safe interfaces;checked
    pointer;checked C's design;Safety;Static analysis;Tools;Cyclones;Benchmark
    testing;Security;Computer bugs;programming languages;security},
    doi={10.1109/SecDev.2018.00015},
    ISSN={},
    month={Sep.},
}

@InProceedings{CheckedCProof:POST19,
    author="Ruef, Andrew
        and Lampropoulos, Leonidas
        and Sweet, Ian
        and Tarditi, David
        and Hicks, Michael",
    editor="Nielson, Flemming
        and Sands, David",
    title={{Achieving Safety Incrementally with Checked C}},
    booktitle="Principles of Security and Trust",
    year="2019",
    publisher="Springer International Publishing",
    address="Cham",
    pages="76--98",
    abstract="Checked C is a new effort working toward a memory-safe C. Its design is distinguished from
        that of prior efforts by truly being an extension of C: Every C program is also a Checked C
        program. Thus, one may make incremental safety improvements to existing codebases while
        retaining backward compatibility. This paper makes two contributions. First, to help developers
        convert existing C code to use so-called checked (i.e., safe) pointers, we have developed a
        preliminary, automated porting tool. Notably, this tool takes advantage of the flexibility of
        Checked C's design: The tool need not perfectly classify every pointer, as required of prior
        all-or-nothing efforts. Rather, it can make a best effort to convert more pointers accurately,
    without letting inaccuracies inhibit compilation. However, such partial conversion raises the
        question: If safety violations can still occur, what sort of advantage does using Checked C
        provide? We draw inspiration from research on migratory typing to make our second contribution:
        We prove a blame property that renders so-called checked regions blameless of any run-time
        failure. We formalize this property for a core calculus and mechanize the proof in Coq.",
    isbn="978-3-030-17138-4"
}

@INPROCEEDINGS {Sanitize:SoK:Oakland19,
    author = {D. Song and J. Lettner and P. Rajasekaran and Y. Na and S. Volckaert and P. Larsen and M. Franz},
    booktitle = {2019 2019 IEEE Symposium on Security and Privacy (SP)},
    title = {{SoK: Sanitizing for Security}},
    year = {2019},
    volume = {},
    issn = {CFP19020-ART},
    pages = {},
    keywords = {computer-bugs;security;software-safety;system-software},
    doi = {10.1109/SP.2019.00010},
    url = {https://doi.ieeecomputersociety.org/10.1109/SP.2019.00010},
    publisher = {IEEE Computer Society},
    address = {Los Alamitos, CA, USA},
    month = {may}
}

%--------------------------------------------------------------------------------------------------%
% Spatial Memory Safety
%--------------------------------------------------------------------------------------------------%
@inproceedings{CPI:OSDI14,
    author = {Kuznetsov, Volodymyr and Szekeres, L\'{a}szl\'{o} and Payer, Mathias and Candea, George and Sekar, R. and Song, Dawn},
    title = {{Code-pointer Integrity}},
    booktitle = {Proceedings of the 11th USENIX Conference on Operating Systems Design and Implementation},
    series = {OSDI'14},
    year = {2014},
    isbn = {978-1-931971-16-4},
    location = {Broomfield, CO},
    pages = {147--163},
    numpages = {17},
    url = {http://dl.acm.org/citation.cfm?id=2685048.2685061},
    acmid = {2685061},
}

@INPROCEEDINGS{CPIEfficacy:Oakland15,
    author={I. {Evans} and S. {Fingeret} and J. {Gonzalez} and U. {Otgonbaatar} and T. {Tang} and H. {Shrobe} and S. {Sidiroglou-Douskos} and M. {Rinard} and H. {Okhravi}},
    booktitle={2015 IEEE Symposium on Security and Privacy},
    title={{Missing the Point(er): On the Effectiveness of Code Pointer Integrity}},
    year={2015},
    volume={},
    number={},
    pages={781-796},
    keywords={data protection;security of data;code pointer integrity effectiveness;memory corruption attacks;legacy languages;memory safety;C-C++;control flow integrity;control-hijacking attacks;code pointer protection;instruction level isolation;ARM;information hiding;CPI safe region;data pointer overwrites;security mechanisms;time 98 hour;Computer crashes;Libraries;Delays;Safety;Security},
    doi={10.1109/SP.2015.53},
    ISSN={},
    month={May},
}

%
% ROP papers
%
@inproceedings{ROP:CCS07,
    author = {Shacham, Hovav},
    title = {The Geometry of Innocent Flesh on the Bone: Return-into-libc Without Function Calls (on the x86)},
    booktitle = {Proceedings of the 14th ACM Conference on Computer and Communications Security},
    series = {CCS '07},
    year = {2007},
    isbn = {978-1-59593-703-2},
    location = {Alexandria, Virginia, USA},
    pages = {552--561},
    numpages = {10},
    url = {http://doi.acm.org/10.1145/1315245.1315313},
    doi = {10.1145/1315245.1315313},
    acmid = {1315313},
    publisher = {ACM},
    address = {New York, NY, USA},
    keywords = {instruction set, return-into-libc, turing completeness},
}

@article{ROP:TISSEC12,
    author = {Roemer, Ryan and Buchanan, Erik and Shacham, Hovav and Savage, Stefan},
    title = {Return-Oriented Programming: Systems, Languages, and Applications},
    journal = {ACM Trans. Inf. Syst. Secur.},
    issue_date = {March 2012},
    volume = {15},
    number = {1},
    month = mar,
    year = {2012},
    issn = {1094-9224},
    pages = {2:1--2:34},
    articleno = {2},
    numpages = {34},
    url = {http://doi.acm.org/10.1145/2133375.2133377},
    doi = {10.1145/2133375.2133377},
    acmid = {2133377},
    publisher = {ACM},
    keywords = {NX, RISC, Return-oriented programming, SPARC, W-xor-X, attacks, control flow integrity, memory safety, return-into-libc, x86},
}

@inproceedings {ROP:USS14,
    author = {Nicholas Carlini and David Wagner},
    title = {{{ROP} is Still Dangerous: Breaking Modern Defenses}},
    booktitle = {23rd {USENIX} Security Symposium ({USENIX} Security 14)},
    year = {2014},
    isbn = {978-1-931971-15-7},
    address = {San Diego, CA},
    pages = {385--399},
    url = {https://www.usenix.org/conference/usenixsecurity14/technical-sessions/presentation/carlini},
    publisher = {{USENIX} Association},
}

%--------------------------------------------------------------------------------------------------%
% Temporal Memory Safety
%--------------------------------------------------------------------------------------------------%
@inproceedings{DangPtr:Dhurjati:DSN06,
    author = {Dhurjati, Dinakar and Adve, Vikram},
    title = {{Efficiently Detecting All Dangling Pointer Uses in Production
        Servers}},
    booktitle = {Proceedings of the International Conference on Dependable Systems and Networks},
    series = {DSN '06},
    year = {2006},
    isbn = {0-7695-2607-1},
    pages = {269--280},
    numpages = {12},
    url = {http://dx.doi.org/10.1109/DSN.2006.31},
    doi = {10.1109/DSN.2006.31},
    acmid = {1135707},
    address = {Washington, DC, USA},
}

@inproceedings{DieHard:PLDI06,
    author = {Berger, Emery D. and Zorn, Benjamin G.},
    title = {{DieHard: Probabilistic Memory Safety for Unsafe Languages}},
    booktitle = {Proceedings of the 27th ACM SIGPLAN Conference on Programming Language Design and Implementation},
    series = {PLDI '06},
    year = {2006},
    isbn = {1-59593-320-4},
    location = {Ottawa, Ontario, Canada},
    pages = {158--168},
    numpages = {11},
    url = {http://doi.acm.org/10.1145/1133981.1134000},
    doi = {10.1145/1133981.1134000},
    acmid = {1134000},
    publisher = {ACM},
    address = {New York, NY, USA},
    keywords = {DieHard, dynamic memory allocation, probabilistic memory safety, randomization, replication},
}

@inproceedings{HeapSpray:WOOT08,
    author = {Daniel, Mark and Honoroff, Jake and Miller, Charlie},
    title = {{Engineering Heap Overflow Exploits with JavaScript}},
    booktitle = {Proceedings of the 2Nd Conference on USENIX Workshop on Offensive Technologies},
    series = {WOOT'08},
    year = {2008},
    location = {San Jose, CA},
    pages = {1:1--1:6},
    articleno = {1},
    numpages = {6},
    url = {http://dl.acm.org/citation.cfm?id=1496702.1496703},
    acmid = {1496703},
    publisher = {USENIX Association},
    address = {Berkeley, CA, USA},
}

@inproceedings{DieHarder:CCS10,
    author = {Novark, Gene and Berger, Emery D.},
    title = {{DieHarder: Securing the Heap}},
    booktitle = {Proceedings of the 17th ACM Conference on Computer and Communications Security},
    series = {CCS '10},
    year = {2010},
    isbn = {978-1-4503-0245-6},
    location = {Chicago, Illinois, USA},
    pages = {573--584},
    numpages = {12},
    url = {http://doi.acm.org/10.1145/1866307.1866371},
    doi = {10.1145/1866307.1866371},
    acmid = {1866371},
    publisher = {ACM},
    address = {New York, NY, USA},
    keywords = {buffer overflow, dangling pointer, dynamic memory allocation, memory errors},
}

@inproceedings{CETS:ISMM10,
    author = {Nagarakatte, Santosh and Zhao, Jianzhou and Martin, Milo M.K. and Zdancewic, Steve},
    title = {{CETS: Compiler-Enforced Temporal Safety for C}},
    booktitle = {Proceedings of the 2010 International Symposium on Memory Management},
    series = {ISMM '10},
    year = {2010},
    isbn = {978-1-4503-0054-4},
    location = {Toronto, Ontario, Canada},
    pages = {31--40},
    numpages = {10},
    url = {http://doi.acm.org/10.1145/1806651.1806657},
    doi = {10.1145/1806651.1806657},
    acmid = {1806657},
    publisher = {ACM},
    keywords = {c, dangling pointers, memory safety, temporal errors},
}

@inproceedings{Cling:USS10,
    author = {Akritidis, Periklis},
    title = {{Cling: A Memory Allocator to Mitigate Dangling Pointers}},
    booktitle = {Proceedings of the 19th USENIX Conference on Security},
    series = {USENIX Security'10},
    year = {2010},
    isbn = {888-7-6666-5555-4},
    location = {Washington, DC},
    pages = {12--12},
    numpages = {1},
    url = {http://dl.acm.org/citation.cfm?id=1929820.1929836},
    acmid = {1929836},
    publisher = {USENIX Association},
    address = {Berkeley, CA, USA},
}

@inproceedings{Undangle:ISSTA12,
    author = {Caballero, Juan and Grieco, Gustavo and Marron, Mark and Nappa, Antonio},
    title = {Undangle: Early Detection of Dangling Pointers in Use-after-free and Double-free Vulnerabilities},
    booktitle = {Proceedings of the 2012 International Symposium on Software Testing and Analysis},
    series = {ISSTA 2012},
    year = {2012},
    isbn = {978-1-4503-1454-1},
    location = {Minneapolis, MN, USA},
    pages = {133--143},
    numpages = {11},
    url = {http://doi.acm.org/10.1145/2338965.2336769},
    doi = {10.1145/2338965.2336769},
    acmid = {2336769},
    publisher = {ACM},
}

@inproceedings{DANGNULL:NDSS15,
  title={{Preventing Use-after-free with Dangling Pointers Nullification}},
  author={Byoungyoung Lee and Chengyu Song and Yeongjin Jang and Tielei Wang and Taesoo Kim and Long Lu and Wenke Lee},
  booktitle={NDSS},
  year={2015}
}

@inproceedings{FreeSentry:NDSS15,
  title = {{FreeSentry: Protecting Against Use-After-Free Vulnerabilities Due to
      Dangling Pointers}},
  author = {Yves Younan},
  booktitle = {NDSS},
  year = {2015}
}

@inproceedings{UAFKernel:CCS15,
    author = {Xu, Wen and Li, Juanru and Shu, Junliang and Yang, Wenbo and Xie, Tianyi and Zhang, Yuanyuan and Gu, Dawu},
    title = {{From Collision To Exploitation: Unleashing Use-After-Free
        Vulnerabilities in Linux Kernel}},
    booktitle = {Proceedings of the 22Nd ACM SIGSAC Conference on Computer and Communications Security},
    series = {CCS '15},
    year = {2015},
    isbn = {978-1-4503-3832-5},
    location = {Denver, Colorado, USA},
    pages = {414--425},
    numpages = {12},
    url = {http://doi.acm.org/10.1145/2810103.2813637},
    doi = {10.1145/2810103.2813637},
    acmid = {2813637},
    publisher = {ACM},
    address = {New York, NY, USA},
    keywords = {linux kernel exploit, memory collision, user-after-free vulnerability},
}

@inproceedings{DangSan:EuroSys17,
    author = {van der Kouwe, Erik and Nigade, Vinod and Giuffrida, Cristiano},
    title = {{DangSan: Scalable Use-after-free Detection}},
    booktitle = {Proceedings of the Twelfth European Conference on Computer Systems},
    series = {EuroSys '17},
    year = {2017},
    isbn = {978-1-4503-4938-3},
    location = {Belgrade, Serbia},
    pages = {405--419},
    numpages = {15},
    url = {http://doi.acm.org/10.1145/3064176.3064211},
    doi = {10.1145/3064176.3064211},
    acmid = {3064211},
    publisher = {ACM},
    keywords = {Dangling pointers, LLVM, use-after-free},
}

@inproceedings {Oscar:USS17,
    author = {Thurston H.Y. Dang and Petros Maniatis and David Wagner},
    title = {Oscar: A Practical Page-Permissions-Based Scheme for Thwarting Dangling Pointers},
    booktitle = {26th {USENIX} Security Symposium ({USENIX} Security 17)},
    year = {2017},
    isbn = {978-1-931971-40-9},
    address = {Vancouver, BC},
    pages = {815--832},
    url = {https://www.usenix.org/conference/usenixsecurity17/technical-sessions/presentation/dang},
    publisher = {{USENIX} Association},
}

@inproceedings{CRCount:NDSS19,
    author = {Jangseop Shin and Donghyun Kwon and Jiwon Seo, Yeongpil Cho and
        Yunheung Paek},
    title = {{CRCount: Pointer Invalidation with Reference Counting to Mitigate
       Use-after-free in Legacy C/C++}},
    booktitle = {NDSS},
    year = {2019}
}

@inproceedings{BOGO:ASPLOS19,
    author = {Zhang, Tong and Lee, Dongyoon and Jung, Changhee},
    title = {{BOGO: Buy Spatial Memory Safety, Get Temporal Memory Safety (Almost) Free}},
    booktitle = {Proceedings of the Twenty-Fourth International Conference on Architectural Support for Programming Languages and Operating Systems},
    series = {ASPLOS '19},
    year = {2019},
    isbn = {978-1-4503-6240-5},
    location = {Providence, RI, USA},
    pages = {631--644},
    numpages = {14},
    url = {http://doi.acm.org/10.1145/3297858.3304017},
    doi = {10.1145/3297858.3304017},
    acmid = {3304017},
    keywords = {memory safety, mpx},
}

@inproceedings{CHERIUAF:MICRO19,
    author = {Xia, Hongyan and Woodruf, Jonathan and Ainsworth, Sam and Filardo, Nathaniel W. and Roe, Michael and Richardson, Alexander and Rugg, Peter and Neumann, Peter G. and Moore, Simon W. and Watson, Robert N. M. and Jones, Timothy M.},
    title = {{CHERIvoke: Characterising Pointer Revocation Using CHERI Capabilities
        for Temporal Memory Safety}},
    booktitle = {Proceedings of the 52Nd Annual IEEE/ACM International Symposium on Microarchitecture},
    series = {MICRO '52},
    year = {2019},
    isbn = {978-1-4503-6938-1},
    location = {Columbus, OH, USA},
    pages = {545--557},
    numpages = {13},
    url = {http://doi.acm.org/10.1145/3352460.3358288},
    doi = {10.1145/3352460.3358288},
    acmid = {3358288},
    publisher = {ACM},
    address = {New York, NY, USA},
    keywords = {architecture, security, temporal safety, use-after-free},
}


%--------------------------------------------------------------------------------------------------%
% New Architecture
%--------------------------------------------------------------------------------------------------%
@inproceedings{CHERI:ISCA14,
    author = {Woodruff, Jonathan and Watson, Robert N.M. and Chisnall, David and Moore, Simon W. and Anderson, Jonathan and Davis, Brooks and Laurie, Ben and Neumann, Peter G. and Norton, Robert and Roe, Michael},
    title = {{The CHERI Capability Model: Revisiting RISC in an Age of Risk}},
    booktitle = {Proceeding of the 41st Annual International Symposium on Computer Architecture},
    series = {ISCA '14},
    year = {2014},
    isbn = {978-1-4799-4394-4},
    location = {Minneapolis, Minnesota, USA},
    pages = {457--468},
    numpages = {12},
    url = {http://dl.acm.org/citation.cfm?id=2665671.2665740},
    acmid = {2665740},
    publisher = {IEEE Press},
    address = {Piscataway, NJ, USA},
}


%==================================================================================================%
% Program Analysis
%==================================================================================================%
@inproceedings{APA:PLDI05,
    author = {Lattner, Chris and Adve, Vikram},
    title = {Automatic Pool Allocation: Improving Performance by Controlling Data Structure Layout in the Heap},
    booktitle = {Proceedings of the 2005 ACM SIGPLAN Conference on Programming Language Design and Implementation},
    series = {PLDI '05},
    year = {2005},
    isbn = {1-59593-056-6},
    location = {Chicago, IL, USA},
    pages = {129--142},
    numpages = {14},
    url = {http://doi.acm.org/10.1145/1065010.1065027},
    doi = {10.1145/1065010.1065027},
    acmid = {1065027},
    publisher = {ACM},
    keywords = {cache, data layout, pool allocation, recursive data structure, static analysis},
}

%--------------------------------------------------------------------------------------------------%
% Pointer Analysis
%--------------------------------------------------------------------------------------------------%
@article{AliasUndecide:TOPLAS94,
    author = {Ramalingam, G.},
    title = {{The Undecidability of Aliasing}},
    journal = {ACM Trans. Program. Lang. Syst.},
    issue_date = {Sept. 1994},
    volume = {16},
    number = {5},
    month = sep,
    year = {1994},
    issn = {0164-0925},
    pages = {1467--1471},
    numpages = {5},
    url = {http://doi.acm.org/10.1145/186025.186041},
    doi = {10.1145/186025.186041},
    acmid = {186041},
    publisher = {ACM},
    address = {New York, NY, USA},
    keywords = {alias analysis, pointer analysis},
}


%==================================================================================================%
% Parallel Computing
%==================================================================================================%
@inproceedings{TINYSTM:PPOPP08,
    author = {Felber, Pascal and Fetzer, Christof and Riegel, Torvald},
    title = {{Dynamic Performance Tuning of Word-based Software Transactional
        Memory}},
    booktitle = {Proceedings of the 13th ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming},
    series = {PPoPP '08},
    year = {2008},
    isbn = {978-1-59593-795-7},
    location = {Salt Lake City, UT, USA},
    pages = {237--246},
    numpages = {10},
    url = {http://doi.acm.org/10.1145/1345206.1345241},
    doi = {10.1145/1345206.1345241},
    acmid = {1345241},
    publisher = {ACM},
    address = {New York, NY, USA},
    keywords = {dynamic tuning, transactional memory},
}

@inproceedings{RSTM:OPODIS08,
    author = {Spear, Michael F. and Dalessandro, Luke and Marathe, Virendra J. and Scott, Michael L.},
    title = {{Ordering-Based Semantics for Software Transactional Memory}},
    booktitle = {Proceedings of the 12th International Conference on Principles of Distributed Systems},
    series = {OPODIS '08},
    year = {2008},
    isbn = {978-3-540-92220-9},
    location = {Luxor, Egypt},
    pages = {275--294},
    numpages = {20},
    url = {http://dx.doi.org/10.1007/978-3-540-92221-6_19},
    doi = {10.1007/978-3-540-92221-6_19},
    acmid = {1496331},
    publisher = {Springer-Verlag},
    address = {Berlin, Heidelberg},
}


%==================================================================================================%
% Others
%==================================================================================================%
@ARTICLE{PascalDynDiagose:ITSE1980,
    author={C. N. {Fischer} and R. J. {LeBlanc}},
    journal={IEEE Transactions on Software Engineering},
    title={{The Implementation of Run-Time Diagnostics in Pascal}},
    year={1980},
    volume={SE-6},
    number={4},
    pages={313-319},
    keywords={Diagnostic compiler;Pascal;pointer checking;reference parameter checking;run-time checking;variant record checking;Runtime;Computer languages;Costs;Program processors;Testing;Degradation;Condition monitoring;Reactive power;Protection;Diagnostic compiler;Pascal;pointer checking;reference parameter checking;run-time checking;variant record checking},
    doi={10.1109/TSE.1980.230482},
    ISSN={},
    month={July},
}

@article{Olden:TOPLAS95,
    author = {Rogers, Anne and Carlisle, Martin C. and Reppy, John H. and Hendren, Laurie J.},
    title = {{Supporting Dynamic Data Structures on Distributed-memory Machines}},
    journal = {ACM Trans. Program. Lang. Syst.},
    issue_date = {March 1995},
    volume = {17},
    number = {2},
    month = mar,
    year = {1995},
    issn = {0164-0925},
    pages = {233--263},
    numpages = {31},
    url = {http://doi.acm.org/10.1145/201059.201065},
    doi = {10.1145/201059.201065},
    acmid = {201065},
    publisher = {ACM},
    address = {New York, NY, USA},
    keywords = {dynamic data structures},
}
